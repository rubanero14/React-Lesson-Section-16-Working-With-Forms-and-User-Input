{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\react-lessons\\\\Section 16\\\\01-starting-project\\\\src\\\\components\\\\SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  // Accessing data using useRef in form\n  const nameRef = useRef();\n\n  // Accessing data using useState in form\n  // variable to store entered name and state update\n  const [name, setName] = useState(\"\");\n  const [err, setErr] = useState(false);\n  const emptyInputValidator = () => {};\n  // name input watcher function\n  const getName = event => {\n    if (name.trim() === \"\") {\n      return setErr(true);\n    }\n    setName(event.target.value);\n  };\n\n  // Input blur handler\n  const onInputBlur = event => {\n    if (name.trim() === \"\") {\n      return setErr(true);\n    }\n    setErr(false);\n  };\n\n  // Form submission handler\n  const formSubmit = event => {\n    event.preventDefault();\n    if (name.trim() === \"\") {\n      return setErr(true);\n    }\n    const nameValue = nameRef.current.value;\n    console.log(\"Get name using useRef method: \", nameValue);\n    console.log(\"Get name using useState method: \", name);\n\n    // Resetting name value\n    nameRef.current.value = \"\";\n    setErr(false);\n    return setName(\"\");\n  };\n  const nameInputClass = err ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClass,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: nameRef,\n        type: \"text\",\n        id: \"name\",\n        placeholder: \"Insert your name here..\",\n        onChange: getName,\n        onBlur: onInputBlur,\n        value: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), err && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"Please fill up the name...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"rx1Gf/rD9UXG2QWZx1rwfnbVIwk=\");\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useRef","useState","jsxDEV","_jsxDEV","SimpleInput","props","_s","nameRef","name","setName","err","setErr","emptyInputValidator","getName","event","trim","target","value","onInputBlur","formSubmit","preventDefault","nameValue","current","console","log","nameInputClass","onSubmit","children","className","ref","type","id","placeholder","onChange","onBlur","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/react-lessons/Section 16/01-starting-project/src/components/SimpleInput.js"],"sourcesContent":["import { useRef, useState } from \"react\";\n\nconst SimpleInput = (props) => {\n  // Accessing data using useRef in form\n  const nameRef = useRef();\n\n  // Accessing data using useState in form\n  // variable to store entered name and state update\n  const [name, setName] = useState(\"\");\n  const [err, setErr] = useState(false);\n\n  const emptyInputValidator = () => {\n    \n  }\n  // name input watcher function\n  const getName = (event) => {\n    if (name.trim() === \"\") {\n      return setErr(true);\n    }\n    setName(event.target.value);\n  };\n\n  // Input blur handler\n  const onInputBlur = (event) => {\n    if (name.trim() === \"\") {\n      return setErr(true);\n    }\n\n    setErr(false);\n  };\n\n  // Form submission handler\n  const formSubmit = (event) => {\n    event.preventDefault();\n\n    if (name.trim() === \"\") {\n      return setErr(true);\n    }\n\n    const nameValue = nameRef.current.value;\n    console.log(\"Get name using useRef method: \", nameValue);\n    console.log(\"Get name using useState method: \", name);\n\n    // Resetting name value\n    nameRef.current.value = \"\";\n    setErr(false);\n    return setName(\"\");\n  };\n\n  const nameInputClass = err ? \"form-control invalid\" : \"form-control\";\n\n  return (\n    <form onSubmit={formSubmit}>\n      <div className={nameInputClass}>\n        <input\n          ref={nameRef}\n          type=\"text\"\n          id=\"name\"\n          placeholder=\"Insert your name here..\"\n          onChange={getName}\n          onBlur={onInputBlur}\n          value={name}\n        />\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n      {err && <p className=\"error-text\">Please fill up the name...</p>}\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}