{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\react-lessons\\\\Section 16\\\\01-starting-project\\\\src\\\\components\\\\SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  // Accessing data using useRef in form\n  const nameRef = useRef();\n\n  // Accessing data using useState in form\n  // variable to store entered name and state update\n  const [name, setName] = useState(\"\");\n  const [err, setErr] = useState(false);\n  const emptyInputValidator = name => {\n    if (name.trim() === \"\") {\n      return setErr(true);\n    }\n  };\n  console.e;\n  // name input watcher function\n  const getName = event => {\n    return setName(event.target.value);\n    // emptyInputValidator();\n  };\n\n  // Input blur handler\n  const onInputBlur = event => {\n    emptyInputValidator(name);\n    setErr(false);\n  };\n\n  // Form submission handler\n  const formSubmit = event => {\n    event.preventDefault();\n    emptyInputValidator(name);\n    const nameValue = nameRef.current.value;\n    console.log(\"Get name using useRef method: \", nameValue);\n    console.log(\"Get name using useState method: \", name);\n\n    // Resetting name value\n    nameRef.current.value = \"\";\n    setErr(false);\n    return setName(\"\");\n  };\n  const nameInputClass = err ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClass,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: nameRef,\n        type: \"text\",\n        id: \"name\",\n        placeholder: \"Insert your name here..\",\n        onChange: getName,\n        onBlur: onInputBlur,\n        value: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), err && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"Please fill up the name...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"rx1Gf/rD9UXG2QWZx1rwfnbVIwk=\");\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useRef","useState","jsxDEV","_jsxDEV","SimpleInput","props","_s","nameRef","name","setName","err","setErr","emptyInputValidator","trim","console","e","getName","event","target","value","onInputBlur","formSubmit","preventDefault","nameValue","current","log","nameInputClass","onSubmit","children","className","ref","type","id","placeholder","onChange","onBlur","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/react-lessons/Section 16/01-starting-project/src/components/SimpleInput.js"],"sourcesContent":["import { useRef, useState } from \"react\";\n\nconst SimpleInput = (props) => {\n  // Accessing data using useRef in form\n  const nameRef = useRef();\n\n  // Accessing data using useState in form\n  // variable to store entered name and state update\n  const [name, setName] = useState(\"\");\n  const [err, setErr] = useState(false);\n\n  const emptyInputValidator = (name) => {\n    if (name.trim() === \"\") {\n      return setErr(true);\n    }\n  };\n\n  console.e\n  // name input watcher function\n  const getName = (event) => {\n    return setName(event.target.value);\n    // emptyInputValidator();\n  };\n\n  // Input blur handler\n  const onInputBlur = (event) => {\n    emptyInputValidator(name);\n    setErr(false);\n  };\n\n  // Form submission handler\n  const formSubmit = (event) => {\n    event.preventDefault();\n\n    emptyInputValidator(name);\n\n    const nameValue = nameRef.current.value;\n    console.log(\"Get name using useRef method: \", nameValue);\n    console.log(\"Get name using useState method: \", name);\n\n    // Resetting name value\n    nameRef.current.value = \"\";\n    setErr(false);\n    return setName(\"\");\n  };\n\n  const nameInputClass = err ? \"form-control invalid\" : \"form-control\";\n\n  return (\n    <form onSubmit={formSubmit}>\n      <div className={nameInputClass}>\n        <input\n          ref={nameRef}\n          type=\"text\"\n          id=\"name\"\n          placeholder=\"Insert your name here..\"\n          onChange={getName}\n          onBlur={onInputBlur}\n          value={name}\n        />\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n      {err && <p className=\"error-text\">Please fill up the name...</p>}\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC7B;EACA,MAAMC,OAAO,GAAGP,MAAM,CAAC,CAAC;;EAExB;EACA;EACA,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,GAAG,EAAEC,MAAM,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAErC,MAAMW,mBAAmB,GAAIJ,IAAI,IAAK;IACpC,IAAIA,IAAI,CAACK,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACtB,OAAOF,MAAM,CAAC,IAAI,CAAC;IACrB;EACF,CAAC;EAEDG,OAAO,CAACC,CAAC;EACT;EACA,MAAMC,OAAO,GAAIC,KAAK,IAAK;IACzB,OAAOR,OAAO,CAACQ,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IAClC;EACF,CAAC;;EAED;EACA,MAAMC,WAAW,GAAIH,KAAK,IAAK;IAC7BL,mBAAmB,CAACJ,IAAI,CAAC;IACzBG,MAAM,CAAC,KAAK,CAAC;EACf,CAAC;;EAED;EACA,MAAMU,UAAU,GAAIJ,KAAK,IAAK;IAC5BA,KAAK,CAACK,cAAc,CAAC,CAAC;IAEtBV,mBAAmB,CAACJ,IAAI,CAAC;IAEzB,MAAMe,SAAS,GAAGhB,OAAO,CAACiB,OAAO,CAACL,KAAK;IACvCL,OAAO,CAACW,GAAG,CAAC,gCAAgC,EAAEF,SAAS,CAAC;IACxDT,OAAO,CAACW,GAAG,CAAC,kCAAkC,EAAEjB,IAAI,CAAC;;IAErD;IACAD,OAAO,CAACiB,OAAO,CAACL,KAAK,GAAG,EAAE;IAC1BR,MAAM,CAAC,KAAK,CAAC;IACb,OAAOF,OAAO,CAAC,EAAE,CAAC;EACpB,CAAC;EAED,MAAMiB,cAAc,GAAGhB,GAAG,GAAG,sBAAsB,GAAG,cAAc;EAEpE,oBACEP,OAAA;IAAMwB,QAAQ,EAAEN,UAAW;IAAAO,QAAA,gBACzBzB,OAAA;MAAK0B,SAAS,EAAEH,cAAe;MAAAE,QAAA,eAC7BzB,OAAA;QACE2B,GAAG,EAAEvB,OAAQ;QACbwB,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC,MAAM;QACTC,WAAW,EAAC,yBAAyB;QACrCC,QAAQ,EAAElB,OAAQ;QAClBmB,MAAM,EAAEf,WAAY;QACpBD,KAAK,EAAEX;MAAK;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNpC,OAAA;MAAK0B,SAAS,EAAC,cAAc;MAAAD,QAAA,eAC3BzB,OAAA;QAAAyB,QAAA,EAAQ;MAAM;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,EACL7B,GAAG,iBAAIP,OAAA;MAAG0B,SAAS,EAAC,YAAY;MAAAD,QAAA,EAAC;IAA0B;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5D,CAAC;AAEX,CAAC;AAACjC,EAAA,CAjEIF,WAAW;AAAAoC,EAAA,GAAXpC,WAAW;AAmEjB,eAAeA,WAAW;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}